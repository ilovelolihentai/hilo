//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EDP_Project.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/MyDBService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attractions", Namespace="http://schemas.datacontract.org/2004/07/MyDBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Attractions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _AttCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _DescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal _unitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _AttCategory {
            get {
                return this._AttCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this._AttCategoryField, value) != true)) {
                    this._AttCategoryField = value;
                    this.RaisePropertyChanged("_AttCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _Desc {
            get {
                return this._DescField;
            }
            set {
                if ((object.ReferenceEquals(this._DescField, value) != true)) {
                    this._DescField = value;
                    this.RaisePropertyChanged("_Desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _ID {
            get {
                return this._IDField;
            }
            set {
                if ((object.ReferenceEquals(this._IDField, value) != true)) {
                    this._IDField = value;
                    this.RaisePropertyChanged("_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _Image {
            get {
                return this._ImageField;
            }
            set {
                if ((object.ReferenceEquals(this._ImageField, value) != true)) {
                    this._ImageField = value;
                    this.RaisePropertyChanged("_Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _Name {
            get {
                return this._NameField;
            }
            set {
                if ((object.ReferenceEquals(this._NameField, value) != true)) {
                    this._NameField = value;
                    this.RaisePropertyChanged("_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal _unitPrice {
            get {
                return this._unitPriceField;
            }
            set {
                if ((this._unitPriceField.Equals(value) != true)) {
                    this._unitPriceField = value;
                    this.RaisePropertyChanged("_unitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/MyDBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatID {
            get {
                return this.CatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatIDField, value) != true)) {
                    this.CatIDField = value;
                    this.RaisePropertyChanged("CatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatName {
            get {
                return this.CatNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CatNameField, value) != true)) {
                    this.CatNameField = value;
                    this.RaisePropertyChanged("CatName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        EDP_Project.ServiceReference1.CompositeType GetDataUsingDataContract(EDP_Project.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<EDP_Project.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(EDP_Project.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAttractionsAll", ReplyAction="http://tempuri.org/IService1/SelectAttractionsAllResponse")]
        EDP_Project.ServiceReference1.Attractions[] SelectAttractionsAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAttractionsAll", ReplyAction="http://tempuri.org/IService1/SelectAttractionsAllResponse")]
        System.Threading.Tasks.Task<EDP_Project.ServiceReference1.Attractions[]> SelectAttractionsAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAttractions", ReplyAction="http://tempuri.org/IService1/SelectAttractionsResponse")]
        EDP_Project.ServiceReference1.Attractions SelectAttractions(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAttractions", ReplyAction="http://tempuri.org/IService1/SelectAttractionsResponse")]
        System.Threading.Tasks.Task<EDP_Project.ServiceReference1.Attractions> SelectAttractionsAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateAttractions", ReplyAction="http://tempuri.org/IService1/CreateAttractionsResponse")]
        int CreateAttractions(string ID, string Name, string Desc, decimal unitPrice, string Image, string ProdCat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateAttractions", ReplyAction="http://tempuri.org/IService1/CreateAttractionsResponse")]
        System.Threading.Tasks.Task<int> CreateAttractionsAsync(string ID, string Name, string Desc, decimal unitPrice, string Image, string ProdCat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateCategory", ReplyAction="http://tempuri.org/IService1/CreateCategoryResponse")]
        int CreateCategory(string ID, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateCategory", ReplyAction="http://tempuri.org/IService1/CreateCategoryResponse")]
        System.Threading.Tasks.Task<int> CreateCategoryAsync(string ID, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCategoryAll", ReplyAction="http://tempuri.org/IService1/SelectCategoryAllResponse")]
        EDP_Project.ServiceReference1.Category[] SelectCategoryAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCategoryAll", ReplyAction="http://tempuri.org/IService1/SelectCategoryAllResponse")]
        System.Threading.Tasks.Task<EDP_Project.ServiceReference1.Category[]> SelectCategoryAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCategory", ReplyAction="http://tempuri.org/IService1/SelectCategoryResponse")]
        EDP_Project.ServiceReference1.Category SelectCategory(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCategory", ReplyAction="http://tempuri.org/IService1/SelectCategoryResponse")]
        System.Threading.Tasks.Task<EDP_Project.ServiceReference1.Category> SelectCategoryAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAttractionsView", ReplyAction="http://tempuri.org/IService1/SelectAttractionsViewResponse")]
        EDP_Project.ServiceReference1.Attractions SelectAttractionsView(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAttractionsView", ReplyAction="http://tempuri.org/IService1/SelectAttractionsViewResponse")]
        System.Threading.Tasks.Task<EDP_Project.ServiceReference1.Attractions> SelectAttractionsViewAsync(string ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : EDP_Project.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<EDP_Project.ServiceReference1.IService1>, EDP_Project.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public EDP_Project.ServiceReference1.CompositeType GetDataUsingDataContract(EDP_Project.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<EDP_Project.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(EDP_Project.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public EDP_Project.ServiceReference1.Attractions[] SelectAttractionsAll() {
            return base.Channel.SelectAttractionsAll();
        }
        
        public System.Threading.Tasks.Task<EDP_Project.ServiceReference1.Attractions[]> SelectAttractionsAllAsync() {
            return base.Channel.SelectAttractionsAllAsync();
        }
        
        public EDP_Project.ServiceReference1.Attractions SelectAttractions(string ID) {
            return base.Channel.SelectAttractions(ID);
        }
        
        public System.Threading.Tasks.Task<EDP_Project.ServiceReference1.Attractions> SelectAttractionsAsync(string ID) {
            return base.Channel.SelectAttractionsAsync(ID);
        }
        
        public int CreateAttractions(string ID, string Name, string Desc, decimal unitPrice, string Image, string ProdCat) {
            return base.Channel.CreateAttractions(ID, Name, Desc, unitPrice, Image, ProdCat);
        }
        
        public System.Threading.Tasks.Task<int> CreateAttractionsAsync(string ID, string Name, string Desc, decimal unitPrice, string Image, string ProdCat) {
            return base.Channel.CreateAttractionsAsync(ID, Name, Desc, unitPrice, Image, ProdCat);
        }
        
        public int CreateCategory(string ID, string Name) {
            return base.Channel.CreateCategory(ID, Name);
        }
        
        public System.Threading.Tasks.Task<int> CreateCategoryAsync(string ID, string Name) {
            return base.Channel.CreateCategoryAsync(ID, Name);
        }
        
        public EDP_Project.ServiceReference1.Category[] SelectCategoryAll() {
            return base.Channel.SelectCategoryAll();
        }
        
        public System.Threading.Tasks.Task<EDP_Project.ServiceReference1.Category[]> SelectCategoryAllAsync() {
            return base.Channel.SelectCategoryAllAsync();
        }
        
        public EDP_Project.ServiceReference1.Category SelectCategory(string ID) {
            return base.Channel.SelectCategory(ID);
        }
        
        public System.Threading.Tasks.Task<EDP_Project.ServiceReference1.Category> SelectCategoryAsync(string ID) {
            return base.Channel.SelectCategoryAsync(ID);
        }
        
        public EDP_Project.ServiceReference1.Attractions SelectAttractionsView(string ID) {
            return base.Channel.SelectAttractionsView(ID);
        }
        
        public System.Threading.Tasks.Task<EDP_Project.ServiceReference1.Attractions> SelectAttractionsViewAsync(string ID) {
            return base.Channel.SelectAttractionsViewAsync(ID);
        }
    }
}
