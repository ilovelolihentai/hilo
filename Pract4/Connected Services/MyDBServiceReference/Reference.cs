//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pract4.MyDBServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyDBServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        MyDBService.CompositeType GetDataUsingDataContract(MyDBService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<MyDBService.CompositeType> GetDataUsingDataContractAsync(MyDBService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEmployee", ReplyAction="http://tempuri.org/IService1/GetAllEmployeeResponse")]
        MyDBService.Entity.Site[] GetAllEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEmployee", ReplyAction="http://tempuri.org/IService1/GetAllEmployeeResponse")]
        System.Threading.Tasks.Task<MyDBService.Entity.Site[]> GetAllEmployeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeByNric", ReplyAction="http://tempuri.org/IService1/GetEmployeeByNricResponse")]
        MyDBService.Entity.Site GetEmployeeByNric(string nric);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeByNric", ReplyAction="http://tempuri.org/IService1/GetEmployeeByNricResponse")]
        System.Threading.Tasks.Task<MyDBService.Entity.Site> GetEmployeeByNricAsync(string nric);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/DeleteEmployeeByNric", ReplyAction = "http://tempuri.org/IService1/DeleteEmployeeByNricResponse")]
        MyDBService.Entity.Site DeleteEmployeeByNric(string nric);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/DeleteEmployeeByNric", ReplyAction = "http://tempuri.org/IService1/DeleteEmployeeByNricResponse")]
        System.Threading.Tasks.Task<MyDBService.Entity.Site> DeleteEmployeeByNricAsync(string nric);

        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateEmployee", ReplyAction="http://tempuri.org/IService1/CreateEmployeeResponse")]
        int CreateEmployee(string nric, string name, string dob, string dept, double wage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateEmployee", ReplyAction="http://tempuri.org/IService1/CreateEmployeeResponse")]
        System.Threading.Tasks.Task<int> CreateEmployeeAsync(string nric, string name, string dob, string dept, double wage);
        
        
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Pract4.MyDBServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Pract4.MyDBServiceReference.IService1>, Pract4.MyDBServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public MyDBService.CompositeType GetDataUsingDataContract(MyDBService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<MyDBService.CompositeType> GetDataUsingDataContractAsync(MyDBService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public MyDBService.Entity.Site[] GetAllEmployee() {
            return base.Channel.GetAllEmployee();
        }
        
        public System.Threading.Tasks.Task<MyDBService.Entity.Site[]> GetAllEmployeeAsync() {
            return base.Channel.GetAllEmployeeAsync();
        }
        
        public MyDBService.Entity.Site GetEmployeeByNric(string nric) {
            return base.Channel.GetEmployeeByNric(nric);
        }
        
        public System.Threading.Tasks.Task<MyDBService.Entity.Site> GetEmployeeByNricAsync(string nric) {
            return base.Channel.GetEmployeeByNricAsync(nric);
        }
        public MyDBService.Entity.Site DeleteEmployeeByNric(string nric)
        {
            return base.Channel.DeleteEmployeeByNric(nric);
        }

        public System.Threading.Tasks.Task<MyDBService.Entity.Site> DeleteEmployeeByNricAsync(string nric)
        {
            return base.Channel.DeleteEmployeeByNricAsync(nric);
        }

        public int CreateEmployee(string nric, string name, string dob, string dept, double wage) {
            return base.Channel.CreateEmployee(nric, name, dob, dept, wage);
        }
        
        public System.Threading.Tasks.Task<int> CreateEmployeeAsync(string nric, string name, string dob, string dept, double wage) {
            return base.Channel.CreateEmployeeAsync(nric, name, dob, dept, wage);
        }
        
        
    }
}
